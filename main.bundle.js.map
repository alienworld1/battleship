{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://webpack-template/./src/dom/mainmenu.js","webpack://webpack-template/./src/helpers.js","webpack://webpack-template/./src/dom/board.js","webpack://webpack-template/./src/modules/ship.js","webpack://webpack-template/./src/modules/gameboard.js","webpack://webpack-template/./src/modules/player.js","webpack://webpack-template/./src/players/human.js","webpack://webpack-template/./src/players/computer.js","webpack://webpack-template/./src/game-setup.js","webpack://webpack-template/./src/dom/setup.js","webpack://webpack-template/./src/eventEmitter.js","webpack://webpack-template/./src/dom/dialog.js","webpack://webpack-template/./src/report.js","webpack://webpack-template/./src/dom/game.js","webpack://webpack-template/./src/index.js"],"sourcesContent":["import './styles/mainmenu.css';\n\nconst MainMenu = document.createElement('main');\nMainMenu.id = 'main-menu';\n\nconst heading = document.createElement('h1');\nheading.textContent = 'Battleship';\n\nconst button = document.createElement('button');\nbutton.textContent = 'Play'\n\nMainMenu.appendChild(heading);\nMainMenu.appendChild(button);\n\nexport default MainMenu;","/* eslint-disable no-restricted-syntax */\nconst primeMultiply = (a, b) => (\n    (2 ** a) * (3 ** b)\n);\n\nconst timeoutPromise = delay => (\n    new Promise(resolve => {\n        setTimeout(() => (resolve()), delay);\n    })\n);\n\nexport {primeMultiply, timeoutPromise};","import './styles/board.css';\nimport { primeMultiply } from '../helpers';\n\nexport default class Board {\n    #board;\n\n    #squares;\n\n    #listeners = [];\n\n    constructor(id) {\n        this.#board = document.createElement('div');\n        this.#board.classList.add('board');\n        this.#board.id = id;\n\n        this.#squares = [];\n\n        for (let i = 0; i < 10; i += 1) {\n            const row = [];            \n            for (let j = 0; j < 10; j += 1) {\n                const square = document.createElement('div');\n                Object.assign(square, {position: {x: j, y: i}});\n                square.classList.add('square');\n                row.push(square);\n                this.#board.appendChild(square);\n            }\n            this.#squares.push(row);\n        }\n        \n    }\n\n    #squareAt = ({x, y}) => this.#squares[y][x];\n\n    editSquare(position, className, toRemove = false) {\n        const square = this.#squareAt(position);\n        if (!toRemove) {\n            square.classList.add(className);\n        }\n        else {\n            square.classList.remove(className);\n        }\n\n    }\n\n    get board() {\n        return this.#board;\n    }\n\n    get squares() {\n        return this.#squares;\n    }\n\n    render(gameboard, activeClasses) {\n        if (activeClasses.shipPresent) {\n            for (let y = 0; y < 10; y += 1) {\n                for (let x = 0; x < 10; x += 1) {\n                    if (gameboard.isShipPresentAtSquare({x, y})) {\n                        const thisY = y;\n                        const thisX = x;\n                        this.#squares[thisY][thisX].classList.add(activeClasses.shipPresent);\n                    }    \n                }\n           }\n        }\n        \n        if (activeClasses.missedSquares) {\n            gameboard.missedHits().forEach(square => {\n                this.#squares[square.y][square.x].classList.add(activeClasses.missedSquares);\n            }, this)\n        }\n\n        if (activeClasses.hitSquares) {\n            gameboard.attackedSquares().forEach(square => {\n                this.#squares[square.y][square.x].classList.add(activeClasses.hitSquares);\n            }, this)\n        }\n        \n    }\n\n    triggerMethodOnClick(method, exceptions = []) {\n        this.#listeners = [];\n        for (let y = 0; y < 10; y += 1) {\n            for (let x = 0; x < 10; x += 1) {\n                // eslint-disable-next-line no-loop-func\n                if (!exceptions.includes(primeMultiply(x, y))) {\n                    const listener = () => method(x, y);\n                    this.squares[y][x].addEventListener('click', listener);    \n                    this.#listeners.push({x, y, listener});    \n                } else {\n                    this.squares[y][x].classList.add('not-allowed');\n                }\n            }\n        }        \n    }\n\n    clearEventListeners() {\n        this.#listeners.forEach(({x, y, listener}) => {\n            this.squares[y][x].removeEventListener('click', listener);\n        }, this);\n    }\n};","const getShipSize = name => {\n    const sizes = {\n        Carrier: 5,\n        Battleship: 4,\n        Cruiser: 3,\n        Destroyer: 2,\n        Submarine: 1,\n    };\n    return sizes[name];\n}\n\nexport default class Ship {\n    #name;\n\n    #length;\n\n    #numberOfHits;\n\n    constructor(name) {\n        this.#name = name;\n        this.#length = getShipSize(name);\n        this.#numberOfHits = 0;\n    }\n\n    length() {\n        return this.#length;\n    }\n\n    hit() {\n        this.#numberOfHits += 1;\n    }\n\n    numberOfHits() {\n        return this.#numberOfHits;\n    }\n\n    isSunk() {\n        return (this.#numberOfHits >= this.#length);\n    }\n\n    get name() {\n        return this.#name;\n    }\n}\n\nexport {getShipSize};\n","export default class GameBoard {\n    #board;\n\n    #numberOfShips = 0;\n\n    #missedSquares;\n\n    #attackedSquares;\n\n    #shipList;\n\n    clear() {\n        this.#board = [];\n        this.#missedSquares = [];\n        this.#attackedSquares = [];\n        this.#shipList = [];\n        for (let i = 0; i < 10; i += 1) {\n            const row = [];\n            for (let j = 0; j < 10; j += 1) {\n                row.push(null);\n            }\n            this.#board.push(row);\n        }\n    }\n\n    static isValidSquare = square => (square.x >= 0 && square.x < 10 && square.y >= 0  && square.y < 10);\n\n    static canPlaceShip(shipLength, {x, y}, mode) {\n        if (mode === 'horizontal') {\n            for (let i = 0; i < shipLength; i += 1) {\n                if (!GameBoard.isValidSquare({x: x + i, y})) return false;\n            }\n        }\n        else {\n            for (let i = 0; i < shipLength; i += 1) {\n                if (!GameBoard.isValidSquare({x, y: y + i})) return false;\n            }\n        }\n        return true;\n    }\n\n    constructor() {\n        this.clear();\n    }\n\n    shipAt({x, y}) {\n        return this.#board.at(y).at(x);\n    }\n\n    #setShipAtSquare(ship, x, y) {\n        this.#board[y][x] = ship;\n    } \n\n    placeShip(ship, {x, y}, mode) {\n        if (mode === 'horizontal') {\n            for (let i = 0; i < ship.length(); i += 1) {\n                this.#setShipAtSquare(ship, x + i, y);\n            }\n        }\n        else {\n            for (let i = 0; i < ship.length(); i += 1) {\n                this.#setShipAtSquare(ship, x, y + i);\n            }            \n        }\n        this.#numberOfShips += 1;\n        this.#shipList.push(ship);\n    }\n\n    canPlaceShip(shipLength, {x, y}, mode) {\n        if (mode === 'horizontal') {\n            for (let i = 0; i < shipLength; i += 1) {\n                if (!GameBoard.isValidSquare({x: x + i, y})\n                    || this.isShipPresentAtSquare({x: x + i, y})) return false;\n            }\n        }\n        else {\n            for (let i = 0; i < shipLength; i += 1) {\n                if (!GameBoard.isValidSquare({x, y: y + i})\n                    || this.isShipPresentAtSquare({x, y: y + i})) return false;\n            }\n        }\n        return true;\n    }\n\n    isShipPresentAtSquare = square => this.shipAt(square) !== null;\n\n    numberOfShips = () => this.#numberOfShips;\n\n    // Returns false if the attack misses and returns the ship if the attack hits.\n    receiveAttack(square) {\n        const ship = this.shipAt(square);\n\n        if (!ship) {\n            this.#missedSquares.push(square);\n            return false;\n        }\n\n        ship.hit();\n        this.#attackedSquares.push(square);\n        return ship;\n    }\n\n    missedHits = () => this.#missedSquares;\n\n    attackedSquares = () => this.#attackedSquares;\n\n    allShipsHaveSunk = () => this.#shipList.every(ship => ship.isSunk());\n}","import GameBoard from \"./gameboard\";\n\nexport default class Player {\n    #gameboard;\n\n    constructor(name) {\n        this.name = name;\n        this.#gameboard = new GameBoard();\n    }\n\n    gameboard = () => this.#gameboard;\n}","import Player from \"../modules/player\";\n\nconst human = new Player('human');\n\nconst Human = {\n    enemyGameboard: null,\n    gameboard: human.gameboard(),\n}\n\nexport default Human;","import Player from \"../modules/player\";\nimport Ship, {getShipSize} from \"../modules/ship\";\n\nimport { primeMultiply } from \"../helpers\";\n\nconst computer = new Player('computer');\n\nconst randomNumber = () => Math.floor(Math.random() * 10);\n\nconst attackedSquares = [];\n\nconst Computer = {\n    enemyGameboard: null,\n    gameboard: computer.gameboard(),\n\n    playMove: () => {\n        let x = randomNumber();\n        let y = randomNumber();\n        while (attackedSquares.includes(primeMultiply(x, y))) {\n            x = randomNumber();\n            y = randomNumber();\n        }\n        attackedSquares.push(primeMultiply(x, y));\n        return {x, y};\n    },\n\n    setupBoard: shipList => {\n        /* eslint no-constant-condition: [\"error\", { \"checkLoops\": false }] */\n        shipList.forEach(ship => {\n            while (true) {\n                const x = randomNumber();\n                const y = randomNumber();\n                const mode = (Math.random() > 0.5)? 'horizontal' : 'vertical';\n                if (Computer.gameboard.canPlaceShip(getShipSize(ship), {x, y}, mode)) {\n                    Computer.gameboard.placeShip(new Ship(ship), {x, y}, mode);\n                    break;\n                }    \n            }\n        });\n    }\n\n}\n\nexport default Computer;","import Human from './players/human';\nimport Computer from './players/computer';\n\nHuman.enemyGameboard = Computer.gameboard;\nComputer.enemyGameboard = Human.gameboard;\n\nconst shipList = ['Carrier', 'Battleship', 'Cruiser', 'Destroyer', 'Destroyer', 'Submarine', 'Submarine'];\n\nexport {Human, Computer, shipList};\n","import './styles/setup.css';\nimport Board from './board';\n\nimport Ship, { getShipSize } from '../modules/ship';\nimport { Human, shipList } from '../game-setup';\n\nconst renderMessage = (shipName, length, mode, error='') => `<h3>Click a square to place a ${shipName} (${length} squares)!</h3>\n    <p>Right click to rotate your ship. (Mode: ${mode})</p>\n    <p class=\"error\">${error}</p>`;\n\nconst returnNextShip = (() => {\n    let count = 0;\n    return () => {\n        count += 1;\n        return shipList.at(count - 1);\n    };\n})();\n\nconst Setup = document.createElement('main');\nSetup.id = 'setup-screen';\n\nlet ship = returnNextShip();\nlet mode = 'horizontal';\n\nconst label = document.createElement('div');\n\nconst refreshLabel = (error = '') => {\n    label.innerHTML = renderMessage(ship, getShipSize(ship), mode, error);    \n}\n\nconst HumanBoard = new Board('human-board');\nHumanBoard.board.addEventListener('contextmenu', event => {\n    event.preventDefault();\n    mode = (mode === 'horizontal')? 'vertical' : 'horizontal';\n    refreshLabel();\n})\n\nrefreshLabel();\n\nHumanBoard.triggerMethodOnClick((x, y) => {\n    if (!Human.gameboard.canPlaceShip(getShipSize(ship), {x, y}, mode)) {\n        refreshLabel('Invalid placement');\n        return false;\n    }\n    Human.gameboard.placeShip(new Ship(ship), {x, y}, mode);\n    ship = returnNextShip();\n    if (!ship) {\n        Setup.callback();\n    }\n    refreshLabel();\n    HumanBoard.render(Human.gameboard, {\n        shipPresent: 'green-backdrop'\n    });\n    return false;\n});\n\nSetup.appendChild(label);\nSetup.appendChild(HumanBoard.board);\n\nexport default Setup;","const gameEventEmitter = new EventTarget();\nexport default gameEventEmitter;\n","import './styles/dialog.css';\n\nconst dialog = document.createElement('dialog');\nconst h3 = document.createElement('h3');\n\nconst restartButton = document.createElement('button');\nrestartButton.textContent = 'Play Again';\n\ndialog.appendChild(h3);\ndialog.appendChild(restartButton);\n\nconst Dialog = {\n    dialog,\n\n    setResult(result) {\n        if (result === 'win') {\n            h3.textContent = 'Congratulations! You won :)';\n        } else {\n            h3.textContent = 'You lost the game :(';\n        }\n    },\n\n    setRestartFunction(func) {\n        restartButton.addEventListener('click', func);\n    } \n};\n\nexport default Dialog;","import gameEventEmitter from './eventEmitter';\n\nconst gameReport = {\n    allHumanShipsHaveSunk: false,\n    allComputerShipsHaveSunk: false,\n    currentTurn: 'Human',\n};\n\nconst getGameReport = () => gameReport;\n\nconst setGameReport = (field, value) => {\n    gameReport[field] = value;\n    gameEventEmitter.dispatchEvent(new CustomEvent('update'));\n}\n\nexport {getGameReport, setGameReport};","import './styles/game.css';\nimport Board from './board';\n\nimport {Human, Computer} from '../game-setup';\nimport { setGameReport } from '../report';\nimport { timeoutPromise, primeMultiply } from '../helpers';\n\nconst attackedSquares = [];\n\nconst Game = document.createElement('main');\nGame.id = 'game-screen';\n\nconst BoardComponent = (board, label) => {\n    const boardComponent = document.createElement('div');\n    boardComponent.classList.add('board-component');\n\n    boardComponent.appendChild(board);\n\n    const labelElement = document.createElement('h3');\n    labelElement.textContent = label;\n    boardComponent.appendChild(labelElement);\n\n    return boardComponent;\n};\n\nconst HumanBoard = new Board('human-board');\nconst ComputerBoard = new Board('computer-board');\n\nGame.appendChild(BoardComponent(HumanBoard.board, 'You'));\nGame.appendChild(BoardComponent(ComputerBoard.board, 'Computer'));\n\nconst message = document.createElement('p');\nmessage.className = 'message';\nmessage.textContent = 'Click on an enemy square to attack it.';\n\nconst setMessageColor = color => {\n    message.classList.remove('red', 'green');\n    message.classList.add(color);\n}\n\nconst playComputerMove = async () => {\n    await timeoutPromise(1000);\n    const move = Computer.playMove()\n    const attackResult = Human.gameboard.receiveAttack(move);\n    if (!attackResult) {\n        message.textContent = 'None of your ships were hit!';\n        setMessageColor('red');\n    } else if (attackResult.isSunk()) {\n        message.textContent = `Your ${attackResult.name} has sunk!`;\n        setMessageColor('green');\n    } else {\n        message.textContent = `Your ${attackResult.name} was hit!`;\n        setMessageColor('green');\n    }\n    if (Human.gameboard.allShipsHaveSunk()) {\n        setGameReport('allHumanShipsHaveSunk', true);\n    }\n    Game.renderHumanBoard();\n    setGameReport('currentTurn', 'Human');\n}\n\nconst ComputerBoardManager = {\n    disable() {\n        ComputerBoard.clearEventListeners();\n    },\n\n    enable() {\n        ComputerBoard.triggerMethodOnClick((x, y) => {\n            const attackResult = Computer.gameboard.receiveAttack({x, y})\n            if (!attackResult) {\n                message.textContent = 'You didn\\'t hit any ship!';\n                setMessageColor('red');\n            } else if (attackResult.isSunk()) {\n                message.textContent = `You sunk an enemy ${attackResult.name}!`;\n                setMessageColor('green');\n            } else {\n                message.textContent = 'You hit a ship!';\n                setMessageColor('green');\n            }\n            Game.renderComputerBoard();\n            attackedSquares.push(primeMultiply(x, y));\n\n            if (Computer.gameboard.allShipsHaveSunk()) {\n                setGameReport('allComputerShipsHaveSunk', true);\n            }\n\n            setGameReport('currentTurn', 'Computer');\n        }, attackedSquares);        \n    }\n\n}\n\nGame.appendChild(message);\n\nGame.renderHumanBoard = () => {\n    HumanBoard.render(Human.gameboard, {\n        shipPresent: 'green',\n        missedSquares: 'red',\n        hitSquares: 'gray',\n    });    \n};\n\nGame.renderComputerBoard = () => {\n    ComputerBoard.render(Computer.gameboard, {\n        missedSquares: 'red',\n        hitSquares: 'gray',\n    });\n};\n\nexport default Game;\nexport {ComputerBoardManager, playComputerMove};\n","import \"./style.css\";\nimport MainMenu from \"./dom/mainmenu\";\nimport Setup from \"./dom/setup\";\nimport gameEventEmitter from \"./eventEmitter\";\nimport Dialog from \"./dom/dialog\";\nimport Game, {ComputerBoardManager, playComputerMove} from \"./dom/game\";\n\nimport {Computer, shipList} from \"./game-setup\";\nimport { getGameReport } from \"./report\";\n\nconst body = document.querySelector('body');\n\nconst initalizeGame = () => {\n    body.appendChild(Game);\n    Game.renderHumanBoard();\n\n    Computer.setupBoard(shipList); \n    Game.renderComputerBoard();\n\n    ComputerBoardManager.enable();\n}\n\nconst initializeSetup = () => {\n    Setup.callback = () => {\n        body.removeChild(Setup);\n        initalizeGame();\n    };\n    body.appendChild(Setup);\n}\n\nconst initializeMainMenu = () => {\n    body.appendChild(MainMenu);\n    const button = MainMenu.querySelector('button');\n\n    button.addEventListener('click', () => {\n        body.removeChild(MainMenu);\n        initializeSetup();\n    })\n\n}\n\nconst showDialog = result => {\n    const {dialog} = Dialog;\n    dialog.close();\n\n    body.appendChild(dialog);\n\n    Dialog.setResult(result);\n    Dialog.setRestartFunction(() => {\n        // eslint-disable-next-line no-restricted-globals\n        location.reload();\n    });\n\n    dialog.showModal();\n}\n\ngameEventEmitter.addEventListener('update', () => {\n    const report = getGameReport();\n\n    if (report.allComputerShipsHaveSunk) {\n        showDialog('win');\n        return;\n    } \n\n    if (report.allHumanShipsHaveSunk) {\n        showDialog('loss');\n        return;\n    } \n\n    if (report.currentTurn === 'Computer') {\n        ComputerBoardManager.disable();\n        playComputerMove();\n\n    } else {\n        ComputerBoardManager.enable();\n    }\n});\n\n\n\ninitializeMainMenu();\n"],"names":["MainMenu","document","createElement","id","heading","textContent","button","appendChild","primeMultiply","a","b","timeoutPromise","delay","Promise","resolve","setTimeout","Board","board","squares","listeners","constructor","classList","add","i","row","j","square","Object","assign","position","x","y","push","squareAt","_ref","editSquare","className","toRemove","arguments","length","undefined","remove","render","gameboard","activeClasses","shipPresent","isShipPresentAtSquare","thisY","thisX","missedSquares","missedHits","forEach","hitSquares","attackedSquares","triggerMethodOnClick","method","exceptions","includes","listener","addEventListener","clearEventListeners","_ref2","removeEventListener","getShipSize","name","sizes","Carrier","Battleship","Cruiser","Destroyer","Submarine","Ship","numberOfHits","hit","isSunk","GameBoard","numberOfShips","shipList","clear","isValidSquare","canPlaceShip","shipLength","mode","shipAt","at","setShipAtSquare","#setShipAtSquare","ship","placeShip","_ref3","_ref4","receiveAttack","allShipsHaveSunk","every","Player","human","Human","enemyGameboard","computer","randomNumber","Math","floor","random","Computer","playMove","setupBoard","renderMessage","shipName","error","returnNextShip","count","Setup","label","refreshLabel","innerHTML","HumanBoard","event","preventDefault","callback","gameEventEmitter","EventTarget","dialog","h3","restartButton","Dialog","setResult","result","setRestartFunction","func","gameReport","allHumanShipsHaveSunk","allComputerShipsHaveSunk","currentTurn","getGameReport","setGameReport","field","value","dispatchEvent","CustomEvent","Game","BoardComponent","boardComponent","labelElement","ComputerBoard","message","setMessageColor","color","playComputerMove","move","attackResult","renderHumanBoard","ComputerBoardManager","disable","enable","renderComputerBoard","body","querySelector","initalizeGame","initializeSetup","removeChild","initializeMainMenu","showDialog","close","location","reload","showModal","report"],"sourceRoot":""}